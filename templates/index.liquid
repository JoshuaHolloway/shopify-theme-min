<!-- {% for product in collections.frontpage.products limit:4 %}
  <div>
    <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
    {{ product.price | money }}
    {% unless product.available %}<br><strong>sold out</strong>{% endunless %}
    <a href="{{ product.url | within: collection }}">
      <img src="{{ product.featured_image.src | img_url: 'large' }}" alt="{{ product.featured_image.alt | escape }}">
    </a>
  </div>
{% endfor %} -->

{% assign x = 42 %}
{{x}}

<br>

{% assign x = 42 | plus: 1 %}
{{x}}

<br>

{% assign x = 42 %}
{{ x | plus: 1 }}

<br>

<!-- String -->
{% assign z = "1, 2, 3" %}
{{z}}

<br>

<!-- Array -->
{% assign z = "1, 2, 3" | split: ',' %}
{{z}}

<!-- Loops -->
<ul>
  {% for item in z %}
    <li>{{item}}</li>
  {% endfor %}
</ul>

<!-- Products -->
{% assign product = all_products['cup'] %}
{{product}}
<!-- ProductDrop means it exists -->
<p>Product Title: {{product.title}}</p>

<div style="background: deepskyblue;">
  {% assign collection = collections['dishes'] %}
  <p>Collection: {{collection.title}}</p>
  <p>Products in Collection: {{collection.products}}</p>
  <p>Product[0] in Collection: {{collection.products[0]}}</p>
  <p>Product[0].title in Collection: {{collection.products[0].title}}</p>
  <p>Product[1].title in Collection: {{collection.products[1].title}}</p>
  <p>Product[2].title in Collection: {{collection.products[2].title}}</p>
</div>

<div style="background: hotpink;">
  <ul>
    Products in Collection with Loop (with price):
    {% for product in collection.products %}
      <li>{{product.title}}  --  {{product.price | money}}</li>
    {% endfor %}
  </ul>
</div>

<div style="background: darkorchid;">
  <ul>
    Products in Collection with Loop (with price):
    {% for product in collection.products %}
      <li>
        <a href="{{product.url}}" style="color: white;">
          {{product.title}}  --  {{product.price | money}}
        </a>
      </li>
    {% endfor %}
  </ul>
</div>

<div style="background: darkorange;">
  <ul id="josh-ul">
    Add product with JS:
  </ul>
</div>
<script>
  const ul = document.querySelector('#josh-ul');
  const li = document.createElement('li');
  li.innerText = `{{all_products['cup'].title}}`;
  ul.appendChild(li);
</script>

<!-- AJAX-API -->
<script>
  console.log('josh');
  console.log('$');

  $(document).ready(() => {

    console.log('ready');
    jQuery(document);

    // $.get('/cart.js', function(data) {
    //   console.log('data from GET request:');
    //   console.log(data);
    // });

    const cartContents = fetch('/cart.js')
      .then(response => response.json())
      .then(data => {
        console.log('Cart from AJAX-API: ');
        console.log(data);
        return data;
      });

      
  });
</script>

<!-- StoreFront API -->
<script>
  const query = `{
                    shop {
                      name
                    }
                  }`;

  function apiCall(query) {
    // return fetch('https://thememinimal.myshopify.com/api/graphql.json', { // same as below
    return fetch('/api/graphql.json', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/graphql',
        'X-Shopify-Storefront-Access-Token': __config__.get('storefront_access_token')
      },
      body: query
    }).then(response => response.json());
  }

  $(document).ready(function() {
    const $app = $('#app');
  });

  apiCall(query).then(response => {

    console.log('Store Front API GraphQL Response: ');
    console.log(response);
  });
</script>

<!-- Dynamic Sections -->
{{content_for_index}}